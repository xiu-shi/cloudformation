AWSTemplateFormatVersion: "2010-09-09"
Description: "Cloudformation template for VPC"

Resources:
  MyVPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "172.16.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: "Name"
          Value: "jxs-vpc01-yaml"

  PublicSubnet1A:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: "172.16.0.0/24"
      AvailabilityZone: !Select [0, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: "Name"
          Value: "PublicSubnet1A"

  AppPrivateSubnet1A:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: "172.16.1.0/24"
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: "Name"
          Value: "AppPrivateSubnet1A"

  AppPrivateSubnet1B:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: "172.16.2.0/24"
      AvailabilityZone: !Select [0, !GetAZs ""]
      Tags:
        - Key: "Name"
          Value: "AppPrivateSubnet1B"

  PublicSubnet2A:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: "172.16.10.0/24"
      AvailabilityZone: !Select [1, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: "Name"
          Value: "PublicSubnet2A"

  AppPrivateSubnet2A:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: "172.16.11.0/24"
      AvailabilityZone: !Select [1, !GetAZs ""]
      Tags:
        - Key: "Name"
          Value: "AppPrivateSubnet2A"

  AppPrivateSubnet2B:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: "172.16.12.0/24"
      AvailabilityZone: !Select [1, !GetAZs ""]
      Tags:
        - Key: "Name"
          Value: "AppPrivateSubnet2B"

  MyInternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: "Name"
          Value: "jxs-igw01-yaml"

  AttachGateway:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref MyInternetGateway

  # Route table for public internet access
  PublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: "Name"
          Value: "PublicRouteTable"

  PublicRoute:
    Type: "AWS::EC2::Route"
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref MyInternetGateway

  # Route table for remaining subnets (no default route)
  PrivateRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: "Name"
          Value: "PrivateRouteTable"

  # Associations
  PublicSubnet1ARouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PublicSubnet1A
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2ARouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref PublicSubnet2A
      RouteTableId: !Ref PrivateRouteTable

  AppPrivateSubnet1ARouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref AppPrivateSubnet1A
      RouteTableId: !Ref PrivateRouteTable

  AppPrivateSubnet1BRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref AppPrivateSubnet1B
      RouteTableId: !Ref PrivateRouteTable

  AppPrivateSubnet2ARouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref AppPrivateSubnet2A
      RouteTableId: !Ref PrivateRouteTable

  AppPrivateSubnet2BRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref AppPrivateSubnet2B
      RouteTableId: !Ref PrivateRouteTable

  # Bastion Host EC2
  BastionHost:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: "t3.micro"
      KeyName: bastion_key_pair # Replace with your key pair name
      ImageId: "ami-0253a7ea84bc17a73" # Replace with a valid AMI ID for your region
      SubnetId: !Ref PublicSubnet1A
      SecurityGroupIds:
        - !Ref BastionSG
      Tags:
        - Key: "Name"
          Value: "BastionHost"

  # Bastion Host Security Group
  BastionSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Enable SSH access to the Bastion Host"
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: 22
          ToPort: 22
          CidrIp: 86.45.99.68/32

  # AppInstance1A - App1
  AppInstance1A:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: "t3.micro"
      KeyName: bastion_key_pair # Replace with your key pair name
      ImageId: "ami-0253a7ea84bc17a73" # Replace with a valid AMI ID for your region
      SubnetId: !Ref AppPrivateSubnet1A
      SecurityGroupIds:
        - !Ref AppInstance1ASG
      Tags:
        - Key: "Name"
          Value: "App1"

  # AppInstance2B - App2
  AppInstance2B:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: "t3.micro"
      KeyName: bastion_key_pair # Replace with your key pair name
      ImageId: "ami-0253a7ea84bc17a73" # Replace with a valid AMI ID for your region
      SubnetId: !Ref AppPrivateSubnet2B
      SecurityGroupIds:
        - !Ref AppInstance2BSG
      Tags:
        - Key: "Name"
          Value: "App2"

  # Security Group 1A - App1
  AppInstance1ASG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Allow SSH from Basion"
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !Ref BastionSG

  # Security Group 2B - App2
  AppInstance2BSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Allow ICMP Ping from App1"
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: "icmp"
          FromPort: -1
          ToPort: -1
          SourceSecurityGroupId: !Ref AppInstance1ASG
